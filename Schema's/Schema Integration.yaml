agent_name: "FlexiMove Logistics Optimization Agent"
purpose: >
  Optimizes delivery routes, forecasts demand, and dynamically adjusts operations
  based on real-time conditions. Ensures efficient resource use and on-time deliveries.

goals:
  - Route optimization for all scheduled and ad-hoc deliveries.
  - Forecast demand for efficient resource allocation.
  - Real-time route adjustment to respond to traffic and weather changes.

instructions:
  RouteOptimization:
    description: "Calculates optimal routes based on customer locations, traffic, and delivery urgency."
    algorithm: "Dijkstra’s and OR-Tools"
    data_sources:
      - historical_delivery_data.csv
      - real_time_traffic_data.csv
      - weather_conditions.csv
    schemas:
      - name: TrafficDataSchema
        description: "Standard format for requesting and receiving traffic data."
        source: "traffic_data_schema.yaml"
      - name: GeocodingDataSchema
        description: "Standard format for geocoding address-to-coordinate conversions."
        source: "google-maps-geocoding-api-OpenAi-sschema.yaml"
    output_schema: 
      name: RouteOptimizationResponseSchema
      description: "Format for optimized route responses with ETAs."
      source: "route_optimization_response_schema.yaml"
    sub_agents:
      - name: RealTimeAdjustmentAgent
        role: "Monitors real-time conditions and updates routes as needed."
        interaction: "Notifies RouteOptimization when traffic or weather conditions change."

  DemandForecasting:
    description: "Predicts delivery demand patterns to prepare for high-demand periods."
    algorithm: "ARIMA model (SARIMA for seasonality)"
    data_sources:
      - historical_order_data.csv
      - seasonal_demand_patterns.csv
    schemas:
      - name: OrderDataSchema
        description: "Standard format for order data to identify recurring demand patterns."
        source: "order_data_schema.yaml"
    output_schema: 
      name: DemandForecastingResponseSchema
      description: "Standard format for delivering demand forecast data to main system."
      source: "demand_forecasting_response_schema.yaml"
    sub_agents:
      - name: SeasonalAdjustmentAgent
        role: "Analyzes seasonal demand and refines forecasts."
        interaction: "Provides feedback to DemandForecasting based on updated seasonal patterns."

  RealTimeAdjustment:
    description: "Dynamically adjusts delivery routes based on real-time data updates."
    algorithm: "Updates route weights and triggers re-optimization"
    data_sources:
      - live_traffic_api
      - weather_api
      - real_time_orders.csv
    schemas:
      - name: WeatherDataSchema
        description: "Standard format for receiving weather conditions and delay factors."
        source: "weather_data_schema.yaml"
      - name: OrderDataSchema
        description: "Schema format for new incoming orders to integrate into active routes."
        source: "order_data_schema.yaml"
    output_schema: 
      name: RouteAdjustmentResponseSchema
      description: "Format for updated routes and ETAs after real-time adjustments."
      source: "route_adjustment_response_schema.yaml"
    sub_agents:
      - name: TrafficMonitoringAgent
        role: "Continuously checks traffic updates and calculates delays."
        interaction: "Alerts RealTimeAdjustment to initiate route re-optimization if traffic changes."
      - name: WeatherMonitoringAgent
        role: "Monitors weather conditions and calculates weather-based delays."
        interaction: "Notifies RealTimeAdjustment when weather changes impact delivery timelines."
      - name: NewOrderHandlerAgent
        role: "Handles and integrates new delivery requests into daily routes."
        interaction: "Prompts RealTimeAdjustment to adjust routes and ETAs based on new orders."

deployment:
  environment: "Vertex AI on Google Cloud Platform"
  agent_builder: "Vertex AI Agent Builder"
  integration: "API-based communication between agents and FlexiMove’s existing software"
  features:
    - scalable
    - secure
    - containerized
  technical_components:
    - Vertex AI
    - Google Maps API for real-time traffic data
    - Weather API for environmental conditions
